<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from urdf/wamv_gazebo.urdf.xacro    | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Basic WAM-V with gazebo plugins for dynamics -->
<robot name="WAM-V" xmlns:xacro="http://ros.org/wiki/xacro">
  <link name="base_link">
  </link>
  <joint name="dummy_joint" type="fixed">
    <parent link="base_link"/>
    <child link="dummy_link"/>
  </joint>
  <!-- Basic model of the 16' WAM-V USV -->
  <link name="dummy_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0.085 -0.45"/>
      <geometry>
        <mesh filename="package://wamv_description/models/WAM-V-Base/mesh/robot.stl"/>
        <!-- <box size = "0.1 0.01 0.1"/> -->
      </geometry>
    </visual>
    <!-- Top part -->
    <collision name="topPart">
      <origin xyz="0.95 0.0 0.5"/>
      <geometry>
        <box size="1.5 1.1 0.12"/>
      </geometry>
    </collision>
    <!-- External sides -->
    <collision name="left_externalSide">
      <origin xyz="0.9 0.43125 0.21"/>
      <geometry>
        <box size="1.35 0.13 0.67"/>
      </geometry>
    </collision>
    <!-- Internal sides -->
    <collision name="$prefix_internalSide">
      <origin xyz="0.9 0.313125 0.25"/>
      <geometry>
        <box size="1.35 0.15625 0.5"/>
      </geometry>
    </collision>
    <!-- Center part -->
    <collision name="centerPart">
      <origin xyz="0.3375 0.0 0.25"/>
      <geometry>
        <box size="0.20 0.5 0.5"/>
      </geometry>
    </collision>
    <!-- Botoom part -->
    <collision name="bottomPart">
      <origin xyz="0.95 0.0 -0.115"/>
      <geometry>
        <box size="1.3 0.55 0.285"/>
      </geometry>
    </collision>
    <!-- COLLISIONS VISUALS
    
    <visual>
      <origin xyz="0.95 0.0 0.5"/>
      <geometry>
        <box size="1.5 1.1 0.12"/>    
      </geometry>
    </visual>

    
    <visual>
      <origin xyz="${0.95-0.05} ${((0.5-0.06875)*reflect)} ${0.5-0.29}"/>
      <geometry>
        <box size="1.35 0.13 0.67"/>
      </geometry>
    </visual>

    
    <visual>
      <origin xyz="${0.95-0.05} ${((0.446875-0.06875-0.065)*reflect)} ${0.5-0.25}"/> 
      <geometry>
        <box size="1.35 0.15625 0.5"/>
      </geometry>
    </visual>

   
    <visual>
      <origin xyz="${0.95-0.6125} 0.0 ${0.5-0.25}"/> 
      <geometry>
        <box size="0.20 0.5 0.5"/>
      </geometry>
    </visual>

   
    <visual>
      <origin xyz="0.95 0.0 ${0.5-0.25-0.365}"/> 
      <geometry>
        <box size="1.3 0.55 0.285"/> 
      </geometry>
    </visual>

-->
    <!-- Top part -->
    <collision name="topPart">
      <origin xyz="0.95 0.0 0.5"/>
      <geometry>
        <box size="1.5 1.1 0.12"/>
      </geometry>
    </collision>
    <!-- External sides -->
    <collision name="right_externalSide">
      <origin xyz="0.9 -0.43125 0.21"/>
      <geometry>
        <box size="1.35 0.13 0.67"/>
      </geometry>
    </collision>
    <!-- Internal sides -->
    <collision name="$prefix_internalSide">
      <origin xyz="0.9 -0.313125 0.25"/>
      <geometry>
        <box size="1.35 0.15625 0.5"/>
      </geometry>
    </collision>
    <!-- Center part -->
    <collision name="centerPart">
      <origin xyz="0.3375 0.0 0.25"/>
      <geometry>
        <box size="0.20 0.5 0.5"/>
      </geometry>
    </collision>
    <!-- Botoom part -->
    <collision name="bottomPart">
      <origin xyz="0.95 0.0 -0.115"/>
      <geometry>
        <box size="1.3 0.55 0.285"/>
      </geometry>
    </collision>
    <!-- COLLISIONS VISUALS
    
    <visual>
      <origin xyz="0.95 0.0 0.5"/>
      <geometry>
        <box size="1.5 1.1 0.12"/>    
      </geometry>
    </visual>

    
    <visual>
      <origin xyz="${0.95-0.05} ${((0.5-0.06875)*reflect)} ${0.5-0.29}"/>
      <geometry>
        <box size="1.35 0.13 0.67"/>
      </geometry>
    </visual>

    
    <visual>
      <origin xyz="${0.95-0.05} ${((0.446875-0.06875-0.065)*reflect)} ${0.5-0.25}"/> 
      <geometry>
        <box size="1.35 0.15625 0.5"/>
      </geometry>
    </visual>

   
    <visual>
      <origin xyz="${0.95-0.6125} 0.0 ${0.5-0.25}"/> 
      <geometry>
        <box size="0.20 0.5 0.5"/>
      </geometry>
    </visual>

   
    <visual>
      <origin xyz="0.95 0.0 ${0.5-0.25-0.365}"/> 
      <geometry>
        <box size="1.3 0.55 0.285"/> 
      </geometry>
    </visual>

-->
    <inertial>
      <!-- From WAM-V spec sheet -->
      <mass value="16.32"/>
      <inertia ixx="2.74" ixy="0.0" ixz="0.0" iyy="4.16" iyz="0.0" izz="4.7"/>
      <!-- ixx="120.0" ixy="0.0" ixz="0.0" iyy="393" iyz="0.0" izz="446.0" -->
    </inertial>
  </link>
  <link name="right_engine_link">
    <!-- 
      <visual>
        <geometry>
          <mesh filename="package://wamv_description/models/engine/mesh/engine.dae"/>
        </geometry>
      </visual>
      -->
    <collision name="right_engine_vertical_axis_collision">
      <origin rpy="0 0 0" xyz="-0.16 0 -0.24"/>
      <geometry>
        <box size="0.2 0.15 0.83"/>
      </geometry>
    </collision>
    <collision name="right_engine_rear_end_collision">
      <origin rpy="0 0 0" xyz="-0.34 0 0.12"/>
      <geometry>
        <box size="0.12 0.15 0.12"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.889245" ixy="0.0" ixz="0.0" iyy="0.911125" iyz="0.0" izz="0.078125"/>
    </inertial>
  </link>
  <link name="right_propeller_link">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/propeller/mesh/propeller.dae"/>
      </geometry>
    </visual>
    <collision name="right_propeller_collision">
      <origin rpy="0 1.57 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.18" radius="0.24"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.008545" ixy="0.0" ixz="0.0" iyy="0.008545" iyz="0.0" izz="0.0144"/>
    </inertial>
  </link>
  <joint name="right_chasis_engine_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-3.14159265359" upper="3.14159265359" velocity="10"/>
    <origin rpy="0.0 0.0 0.0" xyz="1.33 -0.33 0.368237"/>
    <parent link="base_link"/>
    <child link="right_engine_link"/>
  </joint>
  <joint name="right_engine_propeller_joint" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="right_engine_link"/>
    <child link="right_propeller_link"/>
    <origin rpy="0 0 0" xyz="-0.278156 0 -0.509371"/>
    <limit effort="100" velocity="100"/>
    <dynamics damping="0.05" friction="0.05"/>
  </joint>
  <link name="left_engine_link">
    <!-- 
      <visual>
        <geometry>
          <mesh filename="package://wamv_description/models/engine/mesh/engine.dae"/>
        </geometry>
      </visual>
      -->
    <collision name="left_engine_vertical_axis_collision">
      <origin rpy="0 0 0" xyz="-0.16 0 -0.24"/>
      <geometry>
        <box size="0.2 0.15 0.83"/>
      </geometry>
    </collision>
    <collision name="left_engine_rear_end_collision">
      <origin rpy="0 0 0" xyz="-0.34 0 0.12"/>
      <geometry>
        <box size="0.12 0.15 0.12"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.889245" ixy="0.0" ixz="0.0" iyy="0.911125" iyz="0.0" izz="0.078125"/>
    </inertial>
  </link>
  <link name="left_propeller_link">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/propeller/mesh/propeller.dae"/>
      </geometry>
    </visual>
    <collision name="left_propeller_collision">
      <origin rpy="0 1.57 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.18" radius="0.24"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.008545" ixy="0.0" ixz="0.0" iyy="0.008545" iyz="0.0" izz="0.0144"/>
    </inertial>
  </link>
  <joint name="left_chasis_engine_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-3.14159265359" upper="3.14159265359" velocity="10"/>
    <origin rpy="0.0 0.0 0.0" xyz="1.33 0.33 0.368237"/>
    <parent link="base_link"/>
    <child link="left_engine_link"/>
  </joint>
  <joint name="left_engine_propeller_joint" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="left_engine_link"/>
    <child link="left_propeller_link"/>
    <origin rpy="0 0 0" xyz="-0.278156 0 -0.509371"/>
    <limit effort="100" velocity="100"/>
    <dynamics damping="0.05" friction="0.05"/>
  </joint>
  <link name="rear_engine_link">
    <!-- 
      <visual>
        <geometry>
          <mesh filename="package://wamv_description/models/engine/mesh/engine.dae"/>
        </geometry>
      </visual>
      -->
    <collision name="rear_engine_vertical_axis_collision">
      <origin rpy="0 0 0" xyz="-0.16 0 -0.24"/>
      <geometry>
        <box size="0.2 0.15 0.83"/>
      </geometry>
    </collision>
    <collision name="rear_engine_rear_end_collision">
      <origin rpy="0 0 0" xyz="-0.34 0 0.12"/>
      <geometry>
        <box size="0.12 0.15 0.12"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.889245" ixy="0.0" ixz="0.0" iyy="0.911125" iyz="0.0" izz="0.078125"/>
    </inertial>
  </link>
  <link name="rear_propeller_link">
    <visual>
      <geometry>
        <mesh filename="package://wamv_description/models/propeller/mesh/propeller.dae"/>
      </geometry>
    </visual>
    <collision name="rear_propeller_collision">
      <origin rpy="0 1.57 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.18" radius="0.24"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.05"/>
      <inertia ixx="0.008545" ixy="0.0" ixz="0.0" iyy="0.008545" iyz="0.0" izz="0.0144"/>
    </inertial>
  </link>
  <joint name="rear_chasis_engine_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="10" lower="-3.14159265359" upper="3.14159265359" velocity="10"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.68 0 0.265237"/>
    <parent link="base_link"/>
    <child link="rear_engine_link"/>
  </joint>
  <joint name="rear_engine_propeller_joint" type="continuous">
    <axis rpy="0 0 0" xyz="1 0 0"/>
    <parent link="rear_engine_link"/>
    <child link="rear_propeller_link"/>
    <origin rpy="0 0 0" xyz="-0.278156 0 -0.509371"/>
    <limit effort="100" velocity="100"/>
    <dynamics damping="0.05" friction="0.05"/>
  </joint>
  <!-- <xacro:engine prefix="left_frontt" position="0 1.2  0.25" orientation="0.0 0.0 -0.785"/>
  <xacro:engine prefix="right_frontt" position="0 -1.2 0.25" orientation="0.0 0.0 +0.785"/> -->
  <gazebo>
    <plugin filename="libusv_gazebo_thrust_plugin.so" name="wamv_gazebo_thrust" xmlns:xacro="http://ros.org/wiki/xacro">
      <cmdTimeout>1.0</cmdTimeout>
      <robotNamespace>wamv</robotNamespace>
      <thruster>
        <!-- Required Parameters -->
        <linkName>right_propeller_link</linkName>
        <propJointName>right_engine_propeller_joint</propJointName>
        <engineJointName>right_chasis_engine_joint</engineJointName>
        <cmdTopic>thrusters/right_thrust_cmd</cmdTopic>
        <angleTopic>thrusters/right_thrust_angle</angleTopic>
        <enableAngle>true</enableAngle>
        <!-- Optional Parameters -->
        <mappingType>1</mappingType>
        <maxCmd>1.0</maxCmd>
        <maxForceFwd>2.5</maxForceFwd>
        <maxForceRev>-2.5</maxForceRev>
        <maxAngle>1.57079632679</maxAngle>
      </thruster>
      <thruster>
        <!-- Required Parameters -->
        <linkName>left_propeller_link</linkName>
        <propJointName>left_engine_propeller_joint</propJointName>
        <engineJointName>left_chasis_engine_joint</engineJointName>
        <cmdTopic>thrusters/left_thrust_cmd</cmdTopic>
        <angleTopic>thrusters/left_thrust_angle</angleTopic>
        <enableAngle>true</enableAngle>
        <!-- Optional Parameters -->
        <mappingType>1</mappingType>
        <maxCmd>1.0</maxCmd>
        <maxForceFwd>2.5</maxForceFwd>
        <maxForceRev>-2.5</maxForceRev>
        <maxAngle>1.57079632679</maxAngle>
      </thruster>
      <thruster>
        <!-- Required Parameters -->
        <linkName>rear_propeller_link</linkName>
        <propJointName>rear_engine_propeller_joint</propJointName>
        <engineJointName>rear_chasis_engine_joint</engineJointName>
        <cmdTopic>thrusters/rear_thrust_cmd</cmdTopic>
        <angleTopic>thrusters/rear_thrust_angle</angleTopic>
        <enableAngle>true</enableAngle>
        <!-- Optional Parameters -->
        <mappingType>1</mappingType>
        <maxCmd>1.0</maxCmd>
        <maxForceFwd>2.5</maxForceFwd>
        <maxForceRev>-2.5</maxForceRev>
        <maxAngle>1.57079632679</maxAngle>
      </thruster>
    </plugin>
  </gazebo>
  <!--Gazebo Plugin for simulating WAM-V dynamics-->
  <gazebo>
    <plugin filename="libusv_gazebo_dynamics_plugin.so" name="usv_dynamics_wamv_dynamics_plugin">
      <bodyName>base_link</bodyName>
      <!-- Must be same as the ocean model!-->
      <waterLevel>0</waterLevel>
      <waterDensity>997.8</waterDensity>
      <!-- Added mass -->
      <xDotU>0.0</xDotU>
      <yDotV>0.0</yDotV>
      <nDotR>0.0</nDotR>
      <!-- Linear and quadratic drag -->
      <xU>9.74</xU>
      <xUU>13.75</xUU>
      <yV>7.6</yV>
      <yVV>0.0</yVV>
      <zW>95</zW>
      <kP>9.5</kP>
      <mQ>9.5</mQ>
      <nR>76</nR>
      <nRR>0.0</nRR>
      <!-- General dimensions -->
      <!--<boatArea>2.2</boatArea>-->
      <hullRadius>0.08</hullRadius>
      <boatWidth>1.1</boatWidth>
      <boatLength>1.5</boatLength>
      <!-- Length discretization, AKA, "N" -->
      <length_n>2</length_n>
      <!-- Wave model -->
      <wave_model>ocean_waves</wave_model>
    </plugin>
  </gazebo>
  <!-- === Sensors === -->
  <!-- Add a stereo camera pair -->
  <!-- <xacro:wamv_camera name="front_left_camera"  y="0.1" x="1.5" z="0.65" P="${radians(0)}" /> -->
  <!-- <xacro:wamv_camera name="front_right_camera" y="-0.1" x="1" z="0.65" P="${radians(15)}" /> -->
  <joint name="sonar_sensor_joint" type="fixed">
    <origin rpy="0 0 0.0" xyz="1.6 0.4 0.6"/>
    <parent link="base_link"/>
    <child link="sonar_sensor_link"/>
  </joint>
  <link name="sonar_sensor_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.57 0.0" xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_sensor_link">
    <sensor name="sonar_sensor" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </horizontal>
          <vertical>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_sensor_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/distance1</topicName>
        <frameId>sonar_sensor_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="sonar_sensor_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="sonar_sensor2_joint" type="fixed">
    <origin rpy="0 0 0.0" xyz="1.6 -0.4 0.6"/>
    <parent link="base_link"/>
    <child link="sonar_sensor2_link"/>
  </joint>
  <link name="sonar_sensor2_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.57 0.0" xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_sensor2_link">
    <sensor name="sonar_sensor2" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </horizontal>
          <vertical>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_sensor2_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/distance2</topicName>
        <frameId>sonar_sensor2_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="sonar_sensor2_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="sonar_sensor3_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="0.3 0.4 0.6"/>
    <parent link="base_link"/>
    <child link="sonar_sensor3_link"/>
  </joint>
  <link name="sonar_sensor3_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.57 3.14159265359" xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_sensor3_link">
    <sensor name="sonar_sensor3" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </horizontal>
          <vertical>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_sensor3_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/distance3</topicName>
        <frameId>sonar_sensor3_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="sonar_sensor3_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="sonar_sensor4_joint" type="fixed">
    <origin rpy="0 0 3.14159265359" xyz="0.3 -0.4 0.6"/>
    <parent link="base_link"/>
    <child link="sonar_sensor4_link"/>
  </joint>
  <link name="sonar_sensor4_link">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.000000017" ixy="0" ixz="0" iyy="0.000000017" iyz="0" izz="0.000000017"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
    <visual>
      <origin rpy="0 1.57 3.14159265359" xyz="0.05 0 0"/>
      <geometry>
        <cylinder length="0.06" radius="0.02"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </collision>
  </link>
  <gazebo reference="sonar_sensor4_link">
    <sensor name="sonar_sensor4" type="ray">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <ray>
        <scan>
          <horizontal>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </horizontal>
          <vertical>
            <samples>2</samples>
            <resolution>1</resolution>
            <min_angle>-28.0</min_angle>
            <max_angle>28.0</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.3</min>
          <max>2</max>
          <resolution>0.01</resolution>
        </range>
      </ray>
      <plugin filename="libhector_gazebo_ros_sonar.so" name="gazebo_ros_sonar_sensor4_controller">
        <gaussianNoise>0.005</gaussianNoise>
        <topicName>/distance4</topicName>
        <frameId>sonar_sensor4_link</frameId>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Set color of post -->
  <gazebo reference="sonar_sensor4_link">
    <material>Gazebo/Black</material>
  </gazebo>
  <!-- Monocular Camera -->
  <link name="front_camera_link">
    <visual name="front_camera_visual">
      <origin rpy="0 0 1.57079632679" xyz="-0.033 0 0"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/mono_camera/mesh/mono_camera.dae"/>
      </geometry>
    </visual>
    <collision name="front_camera_lens_collision">
      <origin rpy="0 1.57079632679 0" xyz="0.018 0 0"/>
      <geometry>
        <cylinder length="0.042" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="front_camera_box_collision">
      <origin rpy="0 0 0" xyz="-0.0205 0 0"/>
      <geometry>
        <box size="0.036 0.03 0.03"/>
      </geometry>
    </collision>
    <!-- Model inertia as box with <size>0.078 0.03 0.03</size> -->
    <inertial>
      <mass value="0.3"/>
      <inertia ixx="0.0000450" ixy="0" ixz="0" iyy="0.0001746" iyz="0" izz="0.0001746"/>
    </inertial>
  </link>
  <!-- Define a link for the optical frame.  This will match the sensor frame and
         be oriented in the camera convention. -->
  <link name="front_camera_link_optical">
    </link>
  <joint name="base_to_front_camera_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.5 0 0.65"/>
    <parent link="base_link"/>
    <child link="front_camera_link"/>
  </joint>
  <!-- Camera to optical frame joint.  This is oriented to convert between ENU
         and camera conventions -->
  <joint name="front_camera_to_front_camera_link_optical_joint" type="fixed">
    <origin rpy="-1.57079632679 0 -1.57079632679" xyz="0 0 0"/>
    <parent link="front_camera_link"/>
    <child link="front_camera_link_optical"/>
  </joint>
  <!-- Gazebo camera setup -->
  <gazebo reference="front_camera_link">
    <sensor name="front_camera_sensor" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="front_camera_camera">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>1280</width>
          <height>720</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_plugin_front_camera">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>wamv/sensors/cameras/front_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>wamv/front_camera_link_optical</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Y="${radians(-90)}" post_Y="${radians(-90)}" /> -->
  <link name="gps_wamv_link">
    <visual name="gps_wamv_visual">
      <origin xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://wamv_gazebo/models/gps/mesh/gps.dae"/>
      </geometry>
    </visual>
    <collision name="gps_wamv_collision_base">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.05" radius="0.015"/>
      </geometry>
    </collision>
    <collision name="gps_wamv_collision_antenna">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1" radius="0.15"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.006458" ixy="0.0" ixz="0.0" iyy="0.006458" iyz="0.0" izz="0.01125"/>
    </inertial>
  </link>
  <joint name="gps_wamv_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="0.4 0 0.55"/>
    <parent link="base_link"/>
    <child link="gps_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_gps.so" name="gps_plugin_gps_wamv">
      <updateRate>15</updateRate>
      <alwaysOn>true</alwaysOn>
      <bodyName>gps_wamv_link</bodyName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/gps_wamv_link</frameId>
      <topicName>wamv/sensors/gps/gps/fix</topicName>
      <!-- Note that the hector_gazebo_ros_gps plugin uses NWU coordinates
             for reporting velocities.  This may cause problems if localization
             requires velocity in ENU.
             See Issue #64 in VRX project for details
             https://bitbucket.org/osrf/vrx/issues/64 -->
      <velocityTopicName>wamv/sensors/gps/gps/fix_velocity</velocityTopicName>
      <!-- Location of origin of Gazebo Sand Island map -->
      <referenceLatitude>21.30996</referenceLatitude>
      <referenceLongitude>-157.8901</referenceLongitude>
      <referenceAltitude>0.0</referenceAltitude>
      <referenceHeading>90</referenceHeading>
      <offset>0.0 0.0 0.0</offset>
      <drift>0.0 0.0 0.0</drift>
      <gaussianNoise>0 0 0</gaussianNoise>
      <velocityOffset>0.0 0.0 0.0</velocityOffset>
      <velocityDrift>0.0 0.0 0.0</velocityDrift>
      <velocityGaussianNoise>0.0 0.0 0.0</velocityGaussianNoise>
    </plugin>
  </gazebo>
  <link name="imu_wamv_link">
    <visual name="imu_wamv_visual">
      &gt;
        
      <geometry>
        <box size="0.05 0.025 0.005"/>
      </geometry>
      <material name="imu_wamv_visual_material">
        <color rgba="1.0 0.0 00 1.0"/>
      </material>
    </visual>
    <inertial>
      <mass value="0.1"/>
      <inertia ixx="0.000083" ixy="0.0" ixz="0.0" iyy="0.000083" iyz="0.0" izz="0.0125"/>
    </inertial>
  </link>
  <joint name="imu_wamv_joint" type="revolute">
    <axis xyz="0 0 1"/>
    <limit effort="1000.0" lower="0.0" upper="0" velocity="0"/>
    <origin rpy="0 0 0" xyz="0.3 -0.2 1.3"/>
    <parent link="base_link"/>
    <child link="imu_wamv_link"/>
  </joint>
  <gazebo>
    <plugin filename="libhector_gazebo_ros_imu.so" name="imu_plugin_imu_wamv">
      <updateRate>15</updateRate>
      <bodyName>imu_wamv_link</bodyName>
      <topicName>wamv/sensors/imu/imu/data</topicName>
      <serviceName>wamv/sensors/imu_service</serviceName>
      <!-- Manually prepend namespace to tf frame. -->
      <frameId>wamv/imu_wamv_link</frameId>
      <alwaysOn>true</alwaysOn>
      <accelOffset>0.0 0.0 0.0</accelOffset>
      <accelDrift>0.0 0.0 0.0</accelDrift>
      <accelDriftFrequency>0.00027 0.00027 0.000027</accelDriftFrequency>
      <accelGaussianNoise>0.0 0.0 0.0</accelGaussianNoise>
      <rateOffset>0.0 0.0 0.0</rateOffset>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.00027 0.00027 0.000027</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <yawOffset>0.0</yawOffset>
      <yawDrift>0.0</yawDrift>
      <yawDriftFrequency>0.00027</yawDriftFrequency>
      <yawGaussianNoise>0.0</yawGaussianNoise>
    </plugin>
  </gazebo>
  <!-- 3d lidar sensor -->
  <link name="lidar_wamv_link">
    <visual name="lidar_wamv_visual">
      <origin rpy="0 0 0" xyz="0 0 -0.035"/>
      <geometry>
        <mesh filename="package://vrx_gazebo/models/3d_lidar/mesh/3d_lidar.dae"/>
      </geometry>
    </visual>
    <collision name="lidar_wamv_collision">
      <geometry>
        <cylinder length="0.075" radius="0.055"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00109375" ixy="0" ixz="0" iyy="0.00109375" iyz="0" izz="0.00125"/>
    </inertial>
  </link>
  <joint name="base_to_lidar_wamv_post_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.8 0 0.7"/>
    <parent link="base_link"/>
    <child link="lidar_wamv_link"/>
  </joint>
  <gazebo reference="lidar_wamv_link">
    <sensor name="lidar_wamv_sensor" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>18750.0</samples>
            <resolution>0.1</resolution>
            <min_angle>-3.14159265359</min_angle>
            <max_angle>3.14159265359</max_angle>
          </horizontal>
          <vertical>
            <samples>16</samples>
            <resolution>1</resolution>
            <min_angle>-0.261799387799</min_angle>
            <max_angle>0.261799387799</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.1</min>
          <max>130</max>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_velodyne_gpu_laser.so" name="lidar_wamv_plugin">
        <topicName>wamv/sensors/lidars/lidar_wamv/points</topicName>
        <frameName>wamv/lidar_wamv_link</frameName>
        <min_intensity>0</min_intensity>
      </plugin>
    </sensor>
  </gazebo>
  <!--specs for 16 beam lidar are implemented by default.
          See wamv_3d_lidar for those-->
  <link name="planar_wamv_link">
    <visual name="planar_wamv_visual">
      &gt;
        
      <geometry>
        <cylinder length="0.1" radius="0.025"/>
      </geometry>
      <material name="planar_wamv_visual_material">
        <color rgba="0.5 1.0 0.5 1.0"/>
      </material>
    </visual>
  </link>
  <joint name="planar_wamv_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.2 0 1"/>
    <parent link="base_link"/>
    <child link="planar_wamv_link"/>
  </joint>
  <gazebo reference="planar_wamv_link">
    <sensor name="multibeam_sensor_planar_wamv" type="gpu_ray">
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>256</samples>
            <resolution>1</resolution>
            <min_angle>-1.0472</min_angle>
            <max_angle>1.0472</max_angle>
          </horizontal>
        </scan>
        <range>
          <!-- Minimum distance of the beam -->
          <min>0.2</min>
          <!-- Maximum distance of the beam -->
          <max>70</max>
          <!-- Linear resolution of the beam -->
          <resolution>0.02</resolution>
        </range>
      </ray>
      <plugin filename="libgazebo_ros_gpu_laser.so" name="multibeam_simulator">
        <topicName>wamv/sensors/lidars/planar_wamv/scan</topicName>
        <frameName>planar_wamv_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Add pinger 
  <xacro:wamv_pinger name="pinger" position="1.0 0 -1.0" /> -->
</robot>
